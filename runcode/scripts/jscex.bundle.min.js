(function () { var p = { ALL: 0, TRACE: 1, DEBUG: 2, INFO: 3, WARN: 4, ERROR: 5, OFF: 100 }, t = function () { this.level = p.DEBUG }; t.prototype = { log: function (g, e) { if (this.level <= g) try { console.log(e) } catch (h) { } }, trace: function (g) { this.log(p.TRACE, g) }, debug: function (g) { this.log(p.DEBUG, g) }, info: function (g) { this.log(p.INFO, g) }, warn: function (g) { this.log(p.WARN, g) }, error: function (g) { this.log(p.ERROR, g) } }; var n = function (g) { g.Logging = { Logger: t, Level: p }; g.logger = new t; g.modules = {}; g.binders = {}; g.builders = {} }, u = "function" === typeof define && !define.amd, k = "function" === typeof require && "function" === typeof define && define.amd; "function" === typeof require && "undefined" !== typeof module && module.exports ? n(module.exports) : u ? define("jscex", function (g, e, h) { n(h.exports) }) : k ? define("jscex", function () { var g = {}; n(g); return g }) : ("undefined" == typeof Jscex && (Jscex = {}), n(Jscex)) })(); (function () { var p, t, n, u; function k(a) { a = a.charCodeAt(0); return 48 <= a && 57 >= a } function g(a) { return "$" == a || "_" == a || p.test(a) || t.test(a) || n.test(a) || k(a) || u.test(a) || "\u200c" == a || "\u200d" == a } function e(a) { if (F.test(a)) return parseInt(a.substr(2), 16); if (s.test(a)) return parseInt(a.substr(1), 8); if (x.test(a)) return parseFloat(a) } function h(a, b, c, f) { this.message = a; this.line = b; this.col = c; this.pos = f; try { ({})() } catch (r) { this.stack = r.stack } } function i(a) { function b() { return m.text.charAt(m.pos) } function c(a) { var b = m.text.charAt(m.pos++); if (a && !b) throw D; "\n" == b ? (m.newline_before = !0, ++m.line, m.col = 0) : ++m.col; return b } function f(a, b) { var c = m.text.indexOf(a, m.pos); if (b && -1 == c) throw D; return c } function d(a, b, c) { m.regex_allowed = "operator" == a && !r(N, b) || "keyword" == a && r(w, b) || "punc" == a && r(J, b); a = { type: a, value: b, line: m.tokline, col: m.tokcol, pos: m.tokpos, nlb: m.newline_before }; c || (a.comments_before = m.comments_before, m.comments_before = []); m.newline_before = !1; return a } function l(a) { for (var f = "", d = b(), r = 0; d && a(d, r++); ) f += c(), d = b(); return f } function i(a) { throw new h(a, m.tokline, m.tokcol, m.tokpos); } function n(a) { var b = !1, c = !1, f = !1, r = "." == a, g = l(function (d, g) { if ("x" == d || "X" == d) return f ? !1 : f = !0; if (!f && ("E" == d || "e" == d)) return b ? !1 : b = c = !0; if ("-" == d) return c || 0 == g && !a ? !0 : !1; if ("+" == d) return c; c = !1; return "." == d ? !r && !f ? r = !0 : !1 : k(d) || p.test(d) }); a && (g = a + g); var h = e(g); if (!isNaN(h)) return d("num", h); i("Invalid syntax: " + g) } function R() { var a = c(!0); switch (a) { case "n": return "\n"; case "r": return "\r"; case "t": return "\t"; case "b": return "\u0008"; case "v": return "\v"; case "f": return "\u000c"; case "0": return "\x00"; case "x": return String.fromCharCode(t(2)); case "u": return String.fromCharCode(t(4)); default: return a } } function t(a) { for (var b = 0; 0 < a; --a) { var f = parseInt(c(!0), 16); isNaN(f) && i("Invalid hex-character pattern in string"); b = b << 4 | f } return b } function u() { return A("Unterminated string constant", function () { for (var a = c(), b = ""; ; ) { var f = c(!0); if ("\\" == f) f = R(); else if (f == a) break; b += f } return d("string", b) }) } function q() { c(); var a = f("\n"), b; -1 == a ? (b = m.text.substr(m.pos), m.pos = m.text.length) : (b = m.text.substring(m.pos, a), m.pos = a); return d("comment1", b, !0) } function F() { c(); return A("Unterminated multiline comment", function () { var a = f("*/", !0), b = m.text.substring(m.pos, a), c = d("comment2", b, !0); m.pos = a + 2; m.line += b.split("\n").length - 1; m.newline_before = 0 <= b.indexOf("\n"); /^@cc_on/i.test(b); return c }) } function s() { for (var a = !1, f = "", d; null != (d = b()); ) if (a) "u" != d && i("Expecting UnicodeEscapeSequence -- uXXXX"), d = R(), g(d) || i("Unicode char: " + d.charCodeAt(0) + " is not valid in identifier"), f += d, a = !1; else if ("\\" == d) a = !0, c(); else if (g(d)) f += c(); else break; return f } function x() { return A("Unterminated regular expression", function () { for (var a = !1, b = "", f, r = !1; f = c(!0); ) if (a) b += "\\" + f, a = !1; else if ("[" == f) r = !0, b += f; else if ("]" == f && r) r = !1, b += f; else if ("/" == f && !r) break; else "\\" == f ? a = !0 : b += f; a = s(); return d("regexp", [b, a]) }) } function S(a) { function f(a) { if (!b()) return a; var d = a + b(); return r(B, d) ? (c(), f(d)) : a } return d("operator", f(a || c())) } function C() { c(); var a = m.regex_allowed; switch (b()) { case "/": return m.comments_before.push(q()), m.regex_allowed = a, E(); case "*": return m.comments_before.push(F()), m.regex_allowed = a, E() } return m.regex_allowed ? x() : S("/") } function A(a, b) { try { return b() } catch (c) { if (c === D) i(a); else throw c; } } function E(a) { if (a) return x(); for (; r(U, b()); ) c(); m.tokline = m.line; m.tokcol = m.col; m.tokpos = m.pos; a = b(); if (!a) return d("eof"); if (k(a)) return n(); if ('"' == a || "'" == a) return u(); if (r(V, a)) return d("punc", c()); if ("." == a) return c(), k(b()) ? n(".") : d("punc", "."); if ("/" == a) return C(); if (r(G, a)) return S(); if ("\\" == a || "$" == a || "_" == a || p.test(a)) return a = s(), !r(o, a) ? d("name", a) : r(B, a) ? d("operator", a) : r(I, a) ? d("atom", a) : d("keyword", a); i("Unexpected character '" + a + "'") } var m = { text: a.replace(/\r\n?|[\n\u2028\u2029]/g, "\n").replace(/^\uFEFF/, ""), pos: 0, tokpos: 0, line: 0, tokline: 0, col: 0, tokcol: 0, newline_before: !1, regex_allowed: !1, comments_before: [] }; E.context = function (a) { a && (m = a); return m }; return E } function l(a, b, c) { this.name = a; this.start = b; this.end = c } function d(c, d, g) { function e(a, b) { return j.token.type == a && (null == b || j.token.value == b) } function o() { j.prev = j.token; j.peeked ? (j.token = j.peeked, j.peeked = null) : j.token = j.input(); return j.token } function k(a, b, c, f) { var d = j.input.context(); throw new h(a, null != b ? b : d.tokline, null != c ? c : d.tokcol, null != f ? f : d.tokpos); } function w(a) { null == a && (a = j.token); k("Unexpected token: " + a.type + " (" + a.value + ")", a.line, a.col) } function p(a, b) { if (e(a, b)) return o(); var c = j.token; k("Unexpected token " + j.token.type + ", expected " + a, c.line, c.col) } function n(a) { return p("punc", a) } function t() { return !d && (j.token.nlb || e("eof") || e("punc", "}")) } function s() { e("punc", ";") ? o() : t() || w() } function q() { return f(arguments) } function u() { n("("); var a = v(); n(")"); return a } function F() { e("operator", "/") && (j.peeked = null, j.token = j.input(!0)); switch (j.token.type) { case "num": case "string": case "regexp": case "operator": case "atom": return G(); case "name": var a; a = j.peeked || (j.peeked = j.input()); if ("punc" == a.type && ":" == a.value) { a = b(j.token.value, o, o); j.labels.push(a); var c = j.token, f = y(); d && !r(W, f[0]) && w(c); j.labels.pop(); a = q("label", a, f) } else a = G(); return a; case "punc": switch (j.token.value) { case "{": return q("block", A()); case "[": case "(": return G(); case ";": return o(), q("block"); default: w() } case "keyword": switch (b(j.token.value, o)) { case "break": return I("break"); case "continue": return I("continue"); case "debugger": return s(), q("debugger"); case "do": return a = H(y), p("keyword", "while"), q("do", b(u, s), a); case "for": a: { n("("); a = null; if (!e("punc", ";") && (a = e("keyword", "var") ? (o(), m(!0)) : v(!0, !0), e("operator", "in"))) { c = "var" == a[0] ? q("name", a[1][0]) : a; o(); f = v(); n(")"); a = q("for-in", a, c, f, H(y)); break a } n(";"); c = e("punc", ";") ? null : v(); n(";"); f = e("punc", ")") ? null : v(); n(")"); a = q("for", a, c, f, H(y)) } return a; case "function": return M(!0); case "if": return c = u(), f = y(), e("keyword", "else") && (o(), a = y()), q("if", c, f, a); case "return": return 0 == j.in_function && k("'return' outside of function"), q("return", e("punc", ";") ? (o(), null) : t() ? null : b(v, s)); case "switch": return q("switch", u(), J()); case "throw": return q("throw", b(v, s)); case "try": return a = A(), e("keyword", "catch") && (o(), n("("), e("name") || k("Name expected"), f = j.token.value, o(), n(")"), f = [f, A()]), e("keyword", "finally") && (o(), c = A()), !f && !c && k("Missing catch/finally blocks"), q("try", a, f, c); case "var": return b(m, s); case "const": return b(C, s); case "while": return q("while", u(), H(y)); case "with": return q("with", u(), y()); default: w() } } } function G() { return q("stat", b(v, s)) } function I(a) { var b = e("name") ? j.token.value : null; if (null != b) { o(); var c; a: { c = j.labels; for (var f = c.length; 0 <= --f; ) if (c[f] === b) { c = !0; break a } c = !1 } c || k("Label " + b + " without matching loop or statement") } else 0 == j.in_loop && k(a + " not inside a loop or switch"); s(); return q(a, b) } function x(a) { var c = e("name") ? b(j.token.value, o) : null; a && !c && w(); n("("); return q(a ? "defun" : "function", c, function (a, b) { for (; !e("punc", ")"); ) a ? a = !1 : n(","), e("name") || w(), b.push(j.token.value), o(); o(); return b } (!0, []), function () { ++j.in_function; var a = j.in_loop; j.in_loop = 0; var b = A(); --j.in_function; j.in_loop = a; return b } ()) } function A() { n("{"); for (var a = []; !e("punc", "}"); ) e("eof") && w(), a.push(y()); o(); return a } function E(a) { for (var b = []; ; ) { e("name") || w(); var c = j.token.value; o(); e("operator", "=") ? (o(), b.push([c, v(!1, a)])) : b.push([c]); if (!e("punc", ",")) break; o() } return b } function m(a) { return q("var", E(a)) } function C() { return q("const", E()) } function B(c) { if (e("operator", "new")) { o(); var c = B(!1), f; e("punc", "(") ? (o(), f = D(")")) : f = []; return z(q("new", c, f), !0) } if (e("operator") && r(X, j.token.value)) return Q("unary-prefix", b(j.token.value, o), B(c)); if (e("punc")) { switch (j.token.value) { case "(": return o(), z(b(v, a(n, ")")), c); case "[": return o(), z(q("array", D("]", !d, !0)), c); case "{": o(); f = z; var g; g = !0; for (var l = []; !e("punc", "}"); ) { g ? g = !1 : n(","); if (!d && e("punc", "}")) break; var h = j.token.type, i; a: { switch (j.token.type) { case "num": case "string": i = b(j.token.value, o); break a } i = K() } "name" == h && ("get" == i || "set" == i) && !e("punc", ":") ? l.push([K(), M(!1), i]) : (n(":"), l.push([i, v(!1)])) } o(); g = q("object", l); return f(g, c) } w() } if (e("keyword", "function")) return o(), z(M(!1), c); if (r(Y, j.token.type)) return f = "regexp" == j.token.type ? q("regexp", j.token.value[0], j.token.value[1]) : q(j.token.type, j.token.value), z(b(f, o), c); w() } function D(a, b, c) { for (var f = !0, d = []; !e("punc", a); ) { f ? f = !1 : n(","); if (b && e("punc", a)) break; e("punc", ",") && c ? d.push(["atom", "undefined"]) : d.push(v(!1)) } o(); return d } function K() { switch (j.token.type) { case "name": case "operator": case "keyword": case "atom": return b(j.token.value, o); default: w() } } function z(c, f) { return e("punc", ".") ? (o(), z(q("dot", c, K()), f)) : e("punc", "[") ? (o(), z(q("sub", c, b(v, a(n, "]"))), f)) : f && e("punc", "(") ? (o(), z(q("call", c, D(")")), !0)) : f && e("operator") && r(N, j.token.value) ? b(a(Q, "unary-postfix", j.token.value, c), o) : c } function Q(a, b, c) { ("++" == b || "--" == b) && !O(c) && k("Invalid use of " + b + " operator"); return q(a, b, c) } function L(a, b, c) { var f = e("operator") ? j.token.value : null; f && "in" == f && c && (f = null); var d = null != f ? Z[f] : null; return null != d && d > b ? (o(), d = L(B(!0), d, c), L(q("binary", f, a, d), b, c)) : a } function O(a) { if (!d) return !0; switch (a[0]) { case "dot": case "sub": case "new": case "call": return !0; case "name": return "this" != a[1] } } function P(a) { var b; b = L(B(!0), 0, a); if (e("operator", "?")) { o(); var c = v(!1); n(":"); b = q("conditional", b, c, v(!1, a)) } c = j.token.value; if (e("operator") && r(T, c)) { if (O(b)) return o(), q("assign", T[c], b, P(a)); k("Invalid assignment") } return b } function v(a, b) { 0 == arguments.length && (a = !0); var c = P(b); return a && e("punc", ",") ? (o(), q("seq", c, v(!0, b))) : c } function H(a) { try { return ++j.in_loop, a() } finally { --j.in_loop } } var j = { input: "string" == typeof c ? i(c, !0) : c, token: null, prev: null, peeked: null, in_function: 0, in_loop: 0, labels: [] }; j.token = o(); var y = g ? function () { var a = j.token, b = F.apply(this, arguments); b[0] = b[0] instanceof l ? b[0] : new l(b[0], a, j.prev); return b } : F, M = g ? function () { var a = j.prev, b = x.apply(this, arguments); b[0] = b[0] instanceof l ? b[0] : new l(b[0], a, j.prev); return b } : x, J = a(H, function () { n("{"); for (var a = [], b = null; !e("punc", "}"); ) e("eof") && w(), e("keyword", "case") ? (o(), b = [], a.push([v(), b]), n(":")) : e("keyword", "default") ? (o(), n(":"), b = [], a.push([null, b])) : (b || w(), b.push(y())); o(); return a }); return q("toplevel", function (a) { for (; !e("eof"); ) a.push(y()); return a } ([])) } function a(a) { var b = f(arguments, 1); return function () { return a.apply(this, b.concat(f(arguments))) } } function b(a) { a instanceof Function && (a = a()); for (var b = 1, c = arguments.length; 0 < --c; ++b) arguments[b](); return a } function c(a) { for (var b = {}, c = 0; c < a.length; ++c) b[a[c]] = !0; return b } function f(a, b) { return Array.prototype.slice.call(a, null == b ? 0 : b) } function r(a, b) { return Object.prototype.hasOwnProperty.call(a, b) } var o = c("break,case,catch,const,continue,default,delete,do,else,finally,for,function,if,in,instanceof,new,return,switch,throw,try,typeof,var,void,while,with".split(",")); c("abstract,boolean,byte,char,class,debugger,double,enum,export,extends,final,float,goto,implements,import,int,interface,long,native,package,private,protected,public,short,static,super,synchronized,throws,transient,volatile".split(",")); var w = c("return,new,delete,throw,else,case".split(",")), I = c(["false", "null", "true", "undefined"]), G = c("+,-,*,&,%,=,<,>,!,?,|,~,^".split(",")), F = /^0x[0-9a-f]+$/i, s = /^0[0-7]+$/, x = /^\d*\.?\d*(?:e[+-]?\d*(?:\d\.?|\.?\d)\d*)?$/i, B = c("in,instanceof,typeof,new,void,delete,++,--,+,-,!,~,&,|,^,*,/,%,>>,<<,>>>,<,>,<=,>=,==,===,!=,!==,?,=,+=,-=,/=,*=,%=,>>=,<<=,>>>=,|=,^=,&=,&&,||".split(",")), U = c([" ", "\n", "\r", "\t", "\u200b"]), J = c("[ { } ( , . ; :".split(" ")), V = c("[ ] { } ( ) , ; :".split(" ")); c(["g", "m", "s", "i", "y"]); p = RegExp("[\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0523\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0621-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971\\u0972\\u097B-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D28\\u0D2A-\\u0D39\\u0D3D\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC\\u0EDD\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8B\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10D0-\\u10FA\\u10FC\\u1100-\\u1159\\u115F-\\u11A2\\u11A8-\\u11F9\\u1200-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u1676\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19A9\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u2094\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2C6F\\u2C71-\\u2C7D\\u2C80-\\u2CE4\\u2D00-\\u2D25\\u2D30-\\u2D65\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31B7\\u31F0-\\u31FF\\u3400\\u4DB5\\u4E00\\u9FC3\\uA000-\\uA48C\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA65F\\uA662-\\uA66E\\uA67F-\\uA697\\uA717-\\uA71F\\uA722-\\uA788\\uA78B\\uA78C\\uA7FB-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA90A-\\uA925\\uA930-\\uA946\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAC00\\uD7A3\\uF900-\\uFA2D\\uFA30-\\uFA6A\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]"); t = RegExp("[\\u0300-\\u036F\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065E\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0900-\\u0902\\u093C\\u0941-\\u0948\\u094D\\u0951-\\u0955\\u0962\\u0963\\u0981\\u09BC\\u09C1-\\u09C4\\u09CD\\u09E2\\u09E3\\u0A01\\u0A02\\u0A3C\\u0A41\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81\\u0A82\\u0ABC\\u0AC1-\\u0AC5\\u0AC7\\u0AC8\\u0ACD\\u0AE2\\u0AE3\\u0B01\\u0B3C\\u0B3F\\u0B41-\\u0B44\\u0B4D\\u0B56\\u0B62\\u0B63\\u0B82\\u0BC0\\u0BCD\\u0C3E-\\u0C40\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0CBC\\u0CBF\\u0CC6\\u0CCC\\u0CCD\\u0CE2\\u0CE3\\u0D41-\\u0D44\\u0D4D\\u0D62\\u0D63\\u0DCA\\u0DD2-\\u0DD4\\u0DD6\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F71-\\u0F7E\\u0F80-\\u0F84\\u0F86\\u0F87\\u0F90-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102D-\\u1030\\u1032-\\u1037\\u1039\\u103A\\u103D\\u103E\\u1058\\u1059\\u105E-\\u1060\\u1071-\\u1074\\u1082\\u1085\\u1086\\u108D\\u109D\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B7-\\u17BD\\u17C6\\u17C9-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u1922\\u1927\\u1928\\u1932\\u1939-\\u193B\\u1A17\\u1A18\\u1A56\\u1A58-\\u1A5E\\u1A60\\u1A62\\u1A65-\\u1A6C\\u1A73-\\u1A7C\\u1A7F\\u1B00-\\u1B03\\u1B34\\u1B36-\\u1B3A\\u1B3C\\u1B42\\u1B6B-\\u1B73\\u1B80\\u1B81\\u1BA2-\\u1BA5\\u1BA8\\u1BA9\\u1C2C-\\u1C33\\u1C36\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE0\\u1CE2-\\u1CE8\\u1CED\\u1DC0-\\u1DE6\\u1DFD-\\u1DFF\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F\\uA67C\\uA67D\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA825\\uA826\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA951\\uA980-\\uA982\\uA9B3\\uA9B6-\\uA9B9\\uA9BC\\uAA29-\\uAA2E\\uAA31\\uAA32\\uAA35\\uAA36\\uAA43\\uAA4C\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uABE5\\uABE8\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]"); n = RegExp("[\\u0903\\u093E-\\u0940\\u0949-\\u094C\\u094E\\u0982\\u0983\\u09BE-\\u09C0\\u09C7\\u09C8\\u09CB\\u09CC\\u09D7\\u0A03\\u0A3E-\\u0A40\\u0A83\\u0ABE-\\u0AC0\\u0AC9\\u0ACB\\u0ACC\\u0B02\\u0B03\\u0B3E\\u0B40\\u0B47\\u0B48\\u0B4B\\u0B4C\\u0B57\\u0BBE\\u0BBF\\u0BC1\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCC\\u0BD7\\u0C01-\\u0C03\\u0C41-\\u0C44\\u0C82\\u0C83\\u0CBE\\u0CC0-\\u0CC4\\u0CC7\\u0CC8\\u0CCA\\u0CCB\\u0CD5\\u0CD6\\u0D02\\u0D03\\u0D3E-\\u0D40\\u0D46-\\u0D48\\u0D4A-\\u0D4C\\u0D57\\u0D82\\u0D83\\u0DCF-\\u0DD1\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0F3E\\u0F3F\\u0F7F\\u102B\\u102C\\u1031\\u1038\\u103B\\u103C\\u1056\\u1057\\u1062-\\u1064\\u1067-\\u106D\\u1083\\u1084\\u1087-\\u108C\\u108F\\u109A-\\u109C\\u17B6\\u17BE-\\u17C5\\u17C7\\u17C8\\u1923-\\u1926\\u1929-\\u192B\\u1930\\u1931\\u1933-\\u1938\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A19-\\u1A1B\\u1A55\\u1A57\\u1A61\\u1A63\\u1A64\\u1A6D-\\u1A72\\u1B04\\u1B35\\u1B3B\\u1B3D-\\u1B41\\u1B43\\u1B44\\u1B82\\u1BA1\\u1BA6\\u1BA7\\u1BAA\\u1C24-\\u1C2B\\u1C34\\u1C35\\u1CE1\\u1CF2\\uA823\\uA824\\uA827\\uA880\\uA881\\uA8B4-\\uA8C3\\uA952\\uA953\\uA983\\uA9B4\\uA9B5\\uA9BA\\uA9BB\\uA9BD-\\uA9C0\\uAA2F\\uAA30\\uAA33\\uAA34\\uAA4D\\uAA7B\\uABE3\\uABE4\\uABE6\\uABE7\\uABE9\\uABEA\\uABEC]"); u = RegExp("[\\u005F\\u203F\\u2040\\u2054\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF3F]"); h.prototype.toString = function () { return this.message + " (line: " + this.line + ", col: " + this.col + ", pos: " + this.pos + ")\n\n" + this.stack }; var D = {}, X = c("typeof,void,delete,--,++,!,~,-,+".split(",")), N = c(["--", "++"]), T = function (a, b, c) { for (; c < a.length; ) b[a[c]] = a[c].substr(0, a[c].length - 1), c++; return b } ("+=,-=,/=,*=,%=,>>=,<<=,>>>=,|=,^=,&=".split(","), { "=": !0 }, 0), Z = function (a, b) { for (var c = 0, f = 1; c < a.length; ++c, ++f) for (var d = a[c], r = 0; r < d.length; ++r) b[d[r]] = f; return b } ([["||"], ["&&"], ["|"], ["^"], ["&"], ["==", "===", "!=", "!=="], "<,>,<=,>=,in,instanceof".split(","), [">>", "<<", ">>>"], ["+", "-"], ["*", "/", "%"]], {}), W = c(["for", "do", "while", "switch"]), Y = c(["atom", "num", "string", "regexp", "name"]); l.prototype.toString = function () { return this.name }; var C = function (a) { a.modules.parser || (a.parse = d, a.modules.parser = !0) }, $ = "function" === typeof define && !define.amd, aa = "function" === typeof require && "function" === typeof define && define.amd; if ("function" === typeof require && "undefined" !== typeof module && module.exports) module.exports.init = C; else if ($) define("jscex-parser", function (a, b, c) { c.exports.init = C }); else if (aa) define("jscex-parser", function () { return { init: C} }); else { if ("undefined" === typeof Jscex) throw Error('Missing the root object, please load "jscex" module first.'); C(Jscex) } })(); (function () { function p(a) { if ("call" != a[0]) return !1; var b = a[1]; if ("name" != b[0] || "eval" != b[1]) return !1; a = a[2][0]; if (!a || "call" != a[0]) return !1; b = a[1]; if (!b || "dot" != b[0] || "compile" != b[2]) return !1; b = b[1]; if (!b || "name" != b[0] || "Jscex" != b[1]) return !1; b = a[2][0]; if (!b || "string" != b[0]) return !1; a = a[2][1]; return !a || "function" != a[0] ? !1 : !0 } function t(a, b, c, f, d) { var g = b[2][0][2][0][1], b = b[2][0][2][1], l = (new e(a, g, c)).generate(b); d.write("{0} << ", g); (new h(a, g, c, f, d)).generate(b[2], l) } var n = "function" == typeof eval("(function () {})") ? function (a) { return a } : function (a) { return "false || " + a }, u = "undefined" !== typeof JSON && JSON.stringify ? function (a) { return JSON.stringify(a) } : function () { var a = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, b = { "\u0008": "\\b", "\t": "\\t", "\n": "\\n", "\u000c": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }; return function (c) { a.lastIndex = 0; return a.test(c) ? '"' + c.replace(a, function (a) { var c = b[a]; return "s" === typeof c ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + c + '"' } } (), k = function (a) { this._indent = a || " "; this._indentLevel = 0; this.lines = [] }; k.prototype = { write: function (a) { 0 == this.lines.length && this.lines.push(""); var b = arguments; if (0 >= b.length) return this; this.lines[this.lines.length - 1] += a.toString().replace(RegExp("{\\d+}", "g"), function (a) { a = parseInt(a.substring(1, a.length - 1), 10); return b[a + 1] }); return this }, writeLine: function () { this.write.apply(this, arguments); this.lines.push(""); return this }, writeIndents: function () { for (var a = Array(this._indentLevel), b = 0; b < this._indentLevel; b++) a[b] = this._indent; this.write(a.join("")); return this }, addIndentLevel: function (a) { this._indentLevel += a; return this } }; var g = function () { this._seeds = {} }; g.prototype.next = function (a) { var b = this._seeds[a]; if (void 0 == b) return this._seeds[a] = 0; this._seeds[a] = ++b; return b }; var e = function (a, b, c) { this._root = a; this._binder = a.binders[b]; this._seedProvider = c }; e.prototype = { generate: function (a) { var b = { type: "delay", stmts: [] }; this._visitStatements(a[3], b.stmts); return b }, _getBindInfo: function (a) { var b = a[0]; if ("stat" == b) if (a = a[1], "call" == a[0]) { if (b = a[1], "name" == b[0] && b[1] == this._binder && 1 == a[2].length) return { expression: a[2][0], argName: "", assignee: null} } else { if ("assign" == a[0]) { var c = a[2], a = a[3]; if ("call" == a[0] && (b = a[1], "name" == b[0] && b[1] == this._binder && 1 == a[2].length)) return { expression: a[2][0], argName: "_result_$", assignee: c} } } else if ("var" == b) { if (a = a[1], 1 == a.length && (a = a[0], c = a[0], (a = a[1]) && "call" == a[0])) if (b = a[1], "name" == b[0] && b[1] == this._binder && 1 == a[2].length) return { expression: a[2][0], argName: c, assignee: null} } else if ("return" == b && (a = a[1]) && "call" == a[0]) if (b = a[1], "name" == b[0] && b[1] == this._binder && 1 == a[2].length) return { expression: a[2][0], argName: "_result_$", assignee: "return" }; return null }, _visitStatements: function (a, b, c) { 2 >= arguments.length && (c = 0); if (c >= a.length) return b.push({ type: "normal" }), this; var f = a[c], d = this._getBindInfo(f); d ? (f = { type: "bind", info: d }, b.push(f), "return" != d.assignee && (f.stmts = [], this._visitStatements(a, f.stmts, c + 1))) : (d = f[0], "return" == d || "break" == d || "continue" == d || "throw" == d ? b.push({ type: d, stmt: f }) : "if" == d || "try" == d || "for" == d || "do" == d || "while" == d || "switch" == d || "for-in" == d ? (f = this._visit(f), "raw" == f.type ? (b.push(f), this._visitStatements(a, b, c + 1)) : c == a.length - 1 ? b.push(f) : (f = { type: "combine", first: { type: "delay", stmts: [f] }, second: { type: "delay", stmts: []} }, b.push(f), this._visitStatements(a, f.second.stmts, c + 1))) : (b.push({ type: "raw", stmt: f }), this._visitStatements(a, b, c + 1))); return this }, _visit: function (a) { var b = a[0], c = this._visitors[b]; if (c) return c.call(this, a); throw Error('"' + b + '" is not currently supported.'); }, _visitBody: function (a, b) { "block" == a[0] ? this._visitStatements(a[1], b) : this._visitStatements([a], b) }, _noBinding: function (a) { switch (a[a.length - 1].type) { case "normal": case "return": case "break": case "throw": case "continue": return !0 } return !1 }, _collectCaseStatements: function (a, b) { for (var c = [], f = b; f < a.length; f++) for (var d = a[f][1], g = 0; g < d.length; g++) { if ("break" == d[g][0]) return c; c.push(d[g]) } return c }, _visitors: { "for": function (a) { var b = []; this._visitBody(a[4], b); if (this._noBinding(b)) return { type: "raw", stmt: a }; var c = { type: "delay", stmts: [] }, f = a[1]; f && c.stmts.push({ type: "raw", stmt: f }); b = { type: "for", bodyStmt: { type: "delay", stmts: b} }; c.stmts.push(b); if (f = a[2]) b.condition = f; if (a = a[3]) b.update = a; return c }, "for-in": function (a) { var b = []; this._visitBody(a[4], b); if (this._noBinding(b)) return { type: "raw", stmt: a }; var b = { type: "for-in", bodyStmts: b, obj: a[3] }, c = a[2][1]; "var" == a[1][0] ? b.argName = c : (a = "_forInKey_$" + this._seedProvider.next("forInKey"), b.argName = a, b.bodyStmts.unshift({ type: "raw", stmt: this._root.parse(c + " = " + a + ";")[1][0] })); return b }, "while": function (a) { var b = []; this._visitBody(a[2], b); if (this._noBinding(b)) return { type: "raw", stmt: a }; b = { type: "while", bodyStmt: { type: "delay", stmts: b} }; b.condition = a[1]; return b }, "do": function (a) { var b = []; this._visitBody(a[2], b); return this._noBinding(b) ? { type: "raw", stmt: a} : { type: "do", bodyStmt: { type: "delay", stmts: b }, condition: a[1]} }, "switch": function (a) { for (var b = !0, c = { type: "switch", item: a[1], caseStmts: [] }, f = a[2], d = 0; d < f.length; d++) { var g = { item: f[d][0], stmts: [] }; c.caseStmts.push(g); this._visitStatements(this._collectCaseStatements(f, d), g.stmts); b = b && this._noBinding(g.stmts) } return b ? { type: "raw", stmt: a} : c }, "if": function (a) { for (var b = !0, c = { type: "if", conditionStmts: [] }, f = a; ; ) { var d = { cond: f[1], stmts: [] }; c.conditionStmts.push(d); this._visitBody(f[2], d.stmts); b = b && this._noBinding(d.stmts); if ((d = f[3]) && "if" == d[0]) f = d; else break } if (d = f[3]) c.elseStmts = [], this._visitBody(d, c.elseStmts), b = b && this._noBinding(c.elseStmts); return b ? { type: "raw", stmt: a} : c }, "try": function (a) { var b = []; this._visitStatements(a[1], b); var c = this._noBinding(b), b = { type: "try", bodyStmt: { type: "delay", stmts: b} }, f = a[2]; f && (b.exVar = f[0], b.catchStmts = [], this._visitStatements(f[1], b.catchStmts), c = c && this._noBinding(b.catchStmts)); if (f = a[3]) b.finallyStmt = { type: "delay", stmts: [] }, this._visitStatements(f, b.finallyStmt.stmts), c = c && this._noBinding(b.finallyStmt.stmts); return c ? { type: "raw", stmt: a} : b } } }; var h = function (a, b, c, f, d) { this._root = a; this._builderName = b; this._binder = a.binders[b]; this._seedProvider = c; this._codeWriter = f; this._commentWriter = d }; h.prototype = { _code: function () { this._codeWriter.write.apply(this._codeWriter, arguments); return this }, _codeLine: function () { this._codeWriter.writeLine.apply(this._codeWriter, arguments); return this }, _codeIndents: function () { this._codeWriter.writeIndents(); return this }, _codeIndentLevel: function (a) { this._codeWriter.addIndentLevel(a); return this }, _comment: function () { this._commentWriter.write.apply(this._commentWriter, arguments); return this }, _commentLine: function () { this._commentWriter.writeLine.apply(this._commentWriter, arguments); return this }, _commentIndents: function () { this._commentWriter.writeIndents(); return this }, _commentIndentLevel: function (a) { this._commentWriter.addIndentLevel(a); return this }, _both: function () { this._codeWriter.write.apply(this._codeWriter, arguments); this._commentWriter.write.apply(this._commentWriter, arguments); return this }, _bothLine: function () { this._codeWriter.writeLine.apply(this._codeWriter, arguments); this._commentWriter.writeLine.apply(this._commentWriter, arguments); return this }, _bothIndents: function () { this._codeWriter.writeIndents(); this._commentWriter.writeIndents(); return this }, _bothIndentLevel: function (a) { this._codeWriter.addIndentLevel(a); this._commentWriter.addIndentLevel(a); return this }, _newLine: function () { this._codeWriter.writeLine.apply(this._codeWriter, arguments); this._commentWriter.writeLine(); return this }, generate: function (a, b) { this._normalMode = !1; this._builderVar = "_builder_$" + this._seedProvider.next("builderId"); this._codeLine("(function ({0}) {", a.join(", "))._commentLine("function ({0}) {", a.join(", ")); this._bothIndentLevel(1); this._codeIndents()._newLine("var {0} = Jscex.builders[{1}];", this._builderVar, u(this._builderName)); this._codeIndents()._newLine("return {0}.Start(this,", this._builderVar); this._codeIndentLevel(1); this._pos = {}; this._bothIndents()._visitJscex(b)._newLine(); this._codeIndentLevel(-1); this._codeIndents()._newLine(");"); this._bothIndentLevel(-1); this._bothIndents()._code("})")._comment("}") }, _visitJscex: function (a) { this._jscexVisitors[a.type].call(this, a); return this }, _visitRaw: function (a) { var b = a[0], c = this._rawVisitors[b]; if (c) c.call(this, a); else throw Error('"' + b + '" is not currently supported.'); return this }, _visitJscexStatements: function (a) { for (var b = 0; b < a.length; b++) { var c = a[b]; "raw" == c.type || "if" == c.type || "switch" == c.type ? this._bothIndents()._visitJscex(c)._newLine() : "delay" == c.type ? this._visitJscexStatements(c.stmts) : this._bothIndents()._code("return ")._visitJscex(c)._newLine(";") } }, _visitRawStatements: function (a) { for (var b = 0; b < a.length; b++) { var c = a[b]; this._bothIndents()._visitRaw(c)._bothLine(); switch (c[0]) { case "break": case "return": case "continue": case "throw": return } } }, _visitRawBody: function (a) { "block" == a[0] ? this._visitRaw(a) : (this._bothLine(), this._bothIndentLevel(1), this._bothIndents()._visitRaw(a), this._bothIndentLevel(-1)); return this }, _visitRawFunction: function (a) { var b = a[3]; this._bothLine("function " + (a[1] || "") + "(" + a[2].join(", ") + ") {"); this._bothIndentLevel(1); a = this._pos.inFunction; this._pos.inFunction = !0; this._visitRawStatements(b); this._bothIndentLevel(-1); this._pos.inFunction = a; this._bothIndents()._both("}") }, _jscexVisitors: { delay: function (a) { if (1 == a.stmts.length) { var b = a.stmts[0]; switch (b.type) { case "delay": case "combine": case "normal": case "break": case "continue": case "for": case "for-in": case "while": case "do": case "try": this._visitJscex(b); return; case "return": if (!b.stmt[1]) { this._visitJscex(b); return } } } this._newLine(this._builderVar + ".Delay(function () {"); this._codeIndentLevel(1); this._visitJscexStatements(a.stmts); this._codeIndentLevel(-1); this._codeIndents()._code("})") }, combine: function (a) { this._newLine(this._builderVar + ".Combine("); this._codeIndentLevel(1); this._bothIndents()._visitJscex(a.first)._newLine(","); this._bothIndents()._visitJscex(a.second)._newLine(); this._codeIndentLevel(-1); this._codeIndents()._code(")") }, "for": function (a) { a.condition ? (this._codeLine(this._builderVar + ".For(function () {")._commentLine("for ("), this._codeIndentLevel(1), this._bothIndents()._code("return ")._comment("; ")._visitRaw(a.condition)._newLine(";"), this._codeIndentLevel(-1), this._bothIndents()._code("}, ")) : this._code(this._builderVar + ".For(null, ")._comment("for (; "); a.update ? (this._newLine("function () {"), this._codeIndentLevel(1), this._bothIndents()._comment("; ")._visitRaw(a.update)._codeLine(";")._commentLine(") {"), this._codeIndentLevel(-1), this._codeIndents()._newLine("},")) : this._codeLine("null,")._commentLine("; ) {"); this._bothIndentLevel(1); this._bothIndents()._visitJscex(a.bodyStmt)._newLine(); this._bothIndentLevel(-1); this._bothIndents()._code(")")._comment("}") }, "for-in": function (a) { this._code(this._builderVar + ".ForIn(")._comment("for (var {0} in ", a.argName)._visitRaw(a.obj)._codeLine(", function ({0}) {", a.argName)._commentLine(") {"); this._bothIndentLevel(1); this._visitJscexStatements(a.bodyStmts); this._bothIndentLevel(-1); this._bothIndents()._code("})")._comment("}") }, "while": function (a) { this._newLine(this._builderVar + ".While(function () {"); this._codeIndentLevel(1); this._bothIndents()._code("return ")._comment("while (")._visitRaw(a.condition)._codeLine(";")._commentLine(") {"); this._codeIndentLevel(-1); this._codeIndents()._newLine("},"); this._bothIndentLevel(1); this._bothIndents()._visitJscex(a.bodyStmt)._newLine(); this._bothIndentLevel(-1); this._bothIndents()._code(")")._comment("}") }, "do": function (a) { this._codeLine(this._builderVar + ".Do(")._commentLine("do {"); this._bothIndentLevel(1); this._bothIndents()._visitJscex(a.bodyStmt)._newLine(","); this._commentIndentLevel(-1); this._codeIndents()._newLine("function () {"); this._codeIndentLevel(1); this._bothIndents()._code("return ")._comment("} while (")._visitRaw(a.condition)._codeLine(";")._commentLine(");"); this._codeIndentLevel(-1); this._codeIndents()._newLine("}"); this._codeIndentLevel(-1); this._codeIndents()._code(")") }, raw: function (a) { this._visitRaw(a.stmt, !0) }, bind: function (a) { var b = a.info, c = ""; "return" == b.assignee ? c = "return " : "" != b.argName && (c = "var " + b.argName + " = "); this._code(this._builderVar + ".Bind(")._comment(c + this._binder + "(")._visitRaw(b.expression)._comment(");")._newLine(", function (" + b.argName + ") {"); this._codeIndentLevel(1); "return" == b.assignee ? this._codeIndents()._newLine("return " + this._builderVar + ".Return(" + b.argName + ");") : (b.assignee && this._bothIndents()._visitRaw(b.assignee)._bothLine(" = " + b.argName + ";"), this._visitJscexStatements(a.stmts)); this._codeIndentLevel(-1); this._codeIndents()._code("})") }, "if": function (a) { for (var b = 0; b < a.conditionStmts.length; b++) { var c = a.conditionStmts[b]; this._both("if (")._visitRaw(c.cond)._bothLine(") {"); this._bothIndentLevel(1); this._visitJscexStatements(c.stmts); this._bothIndentLevel(-1); b < a.conditionStmts.length - 1 || a.elseStmts ? this._bothIndents()._both("} else ") : this._bothIndents()._code("} else ")._comment("}") } a.elseStmts ? (this._bothLine("{"), this._bothIndentLevel(1)) : (this._newLine("{"), this._codeIndentLevel(1)); a.elseStmts ? this._visitJscexStatements(a.elseStmts) : this._codeIndents()._newLine("return " + this._builderVar + ".Normal();"); a.elseStmts ? this._bothIndentLevel(-1) : this._codeIndentLevel(-1); a.elseStmts ? this._bothIndents()._both("}") : this._codeIndents()._code("}") }, "switch": function (a) { this._both("switch (")._visitRaw(a.item)._bothLine(") {"); this._bothIndentLevel(1); for (var b = 0; b < a.caseStmts.length; b++) { var c = a.caseStmts[b]; c.item ? this._bothIndents()._both("case ")._visitRaw(c.item)._bothLine(":") : this._bothIndents()._bothLine("default:"); this._bothIndentLevel(1); this._visitJscexStatements(c.stmts); this._bothIndentLevel(-1) } this._bothIndents()._code("}") }, "try": function (a) { this._codeLine(this._builderVar + ".Try(")._commentLine("try {"); this._bothIndentLevel(1); this._bothIndents()._visitJscex(a.bodyStmt)._newLine(","); this._commentIndentLevel(-1); a.catchStmts ? (this._bothIndents()._codeLine("function ({0}) {", a.exVar)._commentLine("} catch ({0}) {", a.exVar), this._bothIndentLevel(1), this._visitJscexStatements(a.catchStmts), this._bothIndentLevel(-1), this._bothIndents()._codeLine("},"), a.finallyStmt ? this._commentLine("} finally {") : this._commentLine("}")) : this._bothIndents()._codeLine("null,")._commentLine("} finally {"); a.finallyStmt ? (this._commentIndentLevel(1), this._bothIndents()._visitJscex(a.finallyStmt)._newLine(), this._commentIndentLevel(-1)) : this._codeIndents()._newLine("null"); this._codeIndentLevel(-1); this._codeIndents()._code(")"); a.finallyStmt && this._commentIndents()._comment("}") }, normal: function () { this._code(this._builderVar + ".Normal()") }, "throw": function (a) { this._code(this._builderVar + ".Throw(")._comment("throw ")._visitRaw(a.stmt[1])._code(")")._comment(";") }, "break": function () { this._code(this._builderVar + ".Break()")._comment("break;") }, "continue": function () { this._code(this._builderVar + ".Continue()")._comment("continue;") }, "return": function (a) { this._code(this._builderVar + ".Return(")._comment("return"); a.stmt[1] && this._comment(" ")._visitRaw(a.stmt[1]); this._code(")")._comment(";") } }, _rawVisitors: { "var": function (a) { this._both("var "); for (var a = a[1], b = 0; b < a.length; b++) this._both(a[b][0]), 1 < a[b].length && this._both(" = ")._visitRaw(a[b][1]), b < a.length - 1 && this._both(", "); this._both(";") }, seq: function (a) { for (var b = 1; b < a.length; b++) this._visitRaw(a[b]), b < a.length - 1 && this._both(", ") }, binary: function (a) { function b(a) { a = a[0]; return !("num" == a || "name" == a || "dot" == a) } var c = a[1], f = a[2], a = a[3]; b(f) ? this._both("(")._visitRaw(f)._both(") ") : this._visitRaw(f)._both(" "); this._both(c); b(a) ? this._both(" (")._visitRaw(a)._both(")") : this._both(" ")._visitRaw(a) }, sub: function (a) { var b = a[1], a = a[2]; "name" != b[0] ? this._both("(")._visitRaw(b)._both(")[")._visitRaw(a)._both("]") : this._visitRaw(b)._both("[")._visitRaw(a)._both("]") }, "unary-postfix": function (a) { var b = a[1]; this._visitRaw(a[2])._both(b) }, "unary-prefix": function (a) { var b = a[1], a = a[2]; this._both(b); "typeof" == b ? this._both("(")._visitRaw(a)._both(")") : this._visitRaw(a) }, assign: function (a) { var b = a[1], c = a[3]; this._visitRaw(a[2]); "string" == typeof b ? this._both(" " + b + "= ") : this._both(" = "); this._visitRaw(c) }, stat: function (a) { this._visitRaw(a[1])._both(";") }, dot: function (a) { var b = a[1][0]; "dot" == b || "name" == b ? this._visitRaw(a[1])._both(".")._both(a[2]) : this._both("(")._visitRaw(a[1])._both(").")._both(a[2]) }, "new": function (a) { var b = a[1]; this._both("new ")._visitRaw(b)._both("("); for (var a = a[2], b = 0, c = a.length; b < c; b++) this._visitRaw(a[b]), b < c - 1 && this._both(", "); this._both(")") }, call: function (a) { if (p(a)) t(this._root, a, this._seedProvider, this._codeWriter, this._commentWriter); else { var b = "name" == a[1][0] && a[1][1] == this._binder; b && (this._pos = { inFunction: !0 }, this._buffer = []); this._visitRaw(a[1])._both("("); for (var a = a[2], c = 0; c < a.length; c++) this._visitRaw(a[c]), c < a.length - 1 && this._both(", "); this._both(")"); if (b) throw "Invalid bind operation: " + this._buffer.join(""); } }, name: function (a) { this._both(a[1]) }, object: function (a) { a = a[1]; if (0 >= a.length) this._both("{ }"); else { this._bothLine("{"); this._bothIndentLevel(1); for (var b = 0; b < a.length; b++) this._bothIndents()._both(u(a[b][0]) + ": ")._visitRaw(a[b][1]), b < a.length - 1 ? this._bothLine(",") : this._bothLine(""); this._bothIndentLevel(-1); this._bothIndents()._both("}") } }, array: function (a) { this._both("["); for (var a = a[1], b = 0; b < a.length; b++) this._visitRaw(a[b]), b < a.length - 1 && this._both(", "); this._both("]") }, num: function (a) { this._both(a[1]) }, regexp: function (a) { this._both("/" + a[1] + "/" + a[2]) }, string: function (a) { this._both(u(a[1])) }, "function": function (a) { this._visitRawFunction(a) }, defun: function (a) { this._visitRawFunction(a) }, "for": function (a) { this._both("for ("); var b = a[1]; b ? (this._visitRaw(b), "var" != b[0] ? this._both("; ") : this._both(" ")) : this._both("; "); (b = a[2]) && this._visitRaw(b); this._both("; "); (b = a[3]) && this._visitRaw(b); this._both(") "); b = this._pos.inLoop; this._pos.inLoop = !0; this._visitRawBody(a[4]); this._pos.inLoop = b }, "for-in": function (a) { this._both("for ("); var b = a[1]; "var" == b[0] ? this._both("var " + b[1][0][0]) : this._visitRaw(b); this._both(" in ")._visitRaw(a[3])._both(") "); this._visitRawBody(a[4]) }, block: function (a) { this._bothLine("{"); this._bothIndentLevel(1); this._visitRawStatements(a[1]); this._bothIndentLevel(-1); this._bothIndents()._both("}") }, "while": function (a) { var b = a[1], a = a[2], c = this._pos.inLoop; this._pos.inLoop = !0; this._both("while (")._visitRaw(b)._both(") ")._visitRawBody(a); this._pos.inLoop = c }, "do": function (a) { var b = a[1], a = a[2], c = this._pos.inLoop; this._pos.inLoop = !0; this._both("do ")._visitRawBody(a); this._pos.inLoop = c; "block" == a[0] ? this._both(" ") : this._bothLine()._bothIndents(); this._both("while (")._visitRaw(b)._both(");") }, "if": function (a) { var b = a[1], c = a[2]; this._both("if (")._visitRaw(b)._both(") ")._visitRawBody(c); if (a = a[3]) "block" == c[0] ? this._both(" ") : this._bothLine("")._bothIndents(), "if" == a[0] ? this._both("else ")._visitRaw(a) : this._both("else ")._visitRawBody(a) }, "break": function (a) { this._pos.inLoop || this._pos.inSwitch ? this._both("break;") : this._code("return ")._visitJscex({ type: "break", stmt: a })._code(";") }, "continue": function (a) { this._pos.inLoop ? this._both("continue;") : this._code("return ")._visitJscex({ type: "continue", stmt: a })._code(";") }, "return": function (a) { this._pos.inFunction ? (this._both("return"), (a = a[1]) && this._both(" ")._visitRaw(a), this._both(";")) : this._code("return ")._visitJscex({ type: "return", stmt: a })._code(";") }, "throw": function (a) { var b = this._pos; b.inTry || b.inFunction ? this._both("throw ")._visitRaw(a[1])._both(";") : this._code("return ")._visitJscex({ type: "throw", stmt: a })._code(";") }, conditional: function (a) { this._both("(")._visitRaw(a[1])._both(") ? (")._visitRaw(a[2])._both(") : (")._visitRaw(a[3])._both(")") }, "try": function (a) { this._bothLine("try {"); this._bothIndentLevel(1); var b = this._pos.inTry; this._pos.inTry = !0; this._visitRawStatements(a[1]); this._bothIndentLevel(-1); this._pos.inTry = b; b = a[2]; a = a[3]; b && (this._bothIndents()._bothLine("} catch (" + b[0] + ") {"), this._bothIndentLevel(1), this._visitRawStatements(b[1]), this._bothIndentLevel(-1)); a && (this._bothIndents()._bothLine("} finally {"), this._bothIndentLevel(1), this._visitRawStatements(a), this._bothIndentLevel(-1)); this._bothIndents()._both("}") }, "switch": function (a) { this._both("switch (")._visitRaw(a[1])._bothLine(") {"); this._bothIndentLevel(1); var b = this._pos.inSwitch; this._pos.inSwitch = !0; for (var a = a[2], c = 0; c < a.length; c++) { var f = a[c]; this._bothIndents(); f[0] ? this._both("case ")._visitRaw(f[0])._bothLine(":") : this._bothLine("default:"); this._bothIndentLevel(1); this._visitRawStatements(f[1]); this._bothIndentLevel(-1) } this._bothIndentLevel(-1); this._pos.inSwitch = b; this._bothIndents()._both("}") } } }; var i = function (a) { function b(b, f) { var d = f.toString(), e = "eval(Jscex.compile(" + u(b) + ", " + d + "))", e = a.parse(e), l = new k, h = new k; t(a, e[1][0][1], new g, l, h); for (var e = h.lines, l = l.lines, h = e.length, i = 0, p = 0; p < h; p++) { var s = l[p].match(" +"), s = e[p].length - (s ? s[0].length : 0) + 10; s > i && (i = s) } s = Array(i); for (p = 0; p < i; p++) s[p] = " "; i = s.join(""); s = []; for (p = 0; p < h; p++) { var x = e[p]; 0 < x.replace(/ +/g, "").length && (x = "/* " + x + " */ "); var B = i + l[p]; s.push(x); s.push(B.substring(x.length)); s.push("\r\n") } e = s.join(""); a.logger.debug("// Original: \r\n" + d + "\r\n\r\n// Jscexified: \r\n" + e + "\r\n"); return n(e) } a.modules.jit || (a.compile = b, a.modules.jit = !0) }, l = "function" === typeof define && !define.amd, d = "function" === typeof require && "function" === typeof define && define.amd; if ("function" === typeof require && "undefined" !== typeof module && module.exports) module.exports.init = function (a) { if (!a.modules.parser) { if ("string" === typeof __dirname) try { require.paths.unshift(__dirname) } catch (b) { try { module.paths.unshift(__dirname) } catch (c) { } } require("jscex-parser").init(a) } i(a) }; else if (l) define("jscex-jit", ["jscex-parser"], function (a, b, c) { c.exports.init = function (b) { b.modules.parser || a("jscex-parser").init(b); i(b) } }); else if (d) define("jscex-jit", ["jscex-parser"], function (a) { return { init: function (b) { b.modules.parser || a.init(b); i(b) } } }); else { if ("undefined" === typeof Jscex) throw Error('Missing the root object, please load "jscex" module first.'); if (!Jscex.modules.parser) throw Error('Missing essential components, please initialize "parser" module first.'); i(Jscex) } })(); (function () { var p = function () { }; p.prototype = { For: function (k, g, e) { return { next: function (h, i) { var l = function (d) { try { g && !d && g.call(h), !k || k.call(h) ? e.next(h, function (a, c) { if ("normal" == a || "continue" == a) l(!1); else if ("throw" == a || "return" == a) i(a, c); else if ("break" == a) i("normal"); else throw Error('Invalid type for "Loop": ' + a); }) : i("normal") } catch (a) { i("throw", a) } }; l(!0) } } }, ForIn: function (k, g) { return { next: function (e, h) { var i = [], l; for (l in k) i.push(l); var d = function (a) { try { a < i.length ? g(i[a]).next(e, function (b, f) { if ("normal" == b || "continue" == b) d(a + 1); else if ("throw" == b || "return" == b) h(b, f); else if ("break" == b) h("normal"); else throw Error('Invalid type for "Loop": ' + b); }) : h("normal") } catch (b) { h("throw", b) } }; d(0) } } }, While: function (k, g) { return { next: function (e, h) { var i = function () { try { k.call(e) ? g.next(e, function (d, a) { if ("normal" == d || "continue" == d) i(); else if ("throw" == d || "return" == d) h(d, a); else if ("break" == d) h("normal"); else throw Error('Invalid type for "Loop": ' + d); }) : h("normal") } catch (l) { h("throw", l) } }; i() } } }, Do: function (k, g) { return { next: function (e, h) { var i = function () { k.next(e, function (l, d) { if ("normal" == l || "continue" == l) try { g.call(e) ? i() : h("normal") } catch (a) { h("throw", a) } else if ("throw" == l || "return" == l) h(l, d); else if ("break" == l) h("normal"); else throw Error('Invalid type for "Loop": ' + l); }) }; i() } } }, Delay: function (k) { return { next: function (g, e) { try { k.call(g).next(g, e) } catch (h) { e("throw", h) } } } }, Combine: function (k, g) { return { next: function (e, h) { k.next(e, function (i, l, d) { if ("normal" == i) try { g.next(e, h) } catch (a) { h("throw", a) } else h(i, l, d) }) } } }, Return: function (k) { return { next: function (g, e) { e("return", k) } } }, Normal: function () { return { next: function (k, g) { g("normal") } } }, Break: function () { return { next: function (k, g) { g("break") } } }, Continue: function () { return { next: function (k, g) { g("continue") } } }, Throw: function (k) { return { next: function (g, e) { e("throw", k) } } }, Try: function (k, g, e) { return { next: function (h, i) { k.next(h, function (l, d, a) { if ("throw" != l || !g) e ? e.next(h, function (b, c, e) { "normal" == b ? i(l, d, a) : i(b, c, e) }) : i(l, d, a); else if (g) { var b; try { b = g.call(h, d) } catch (c) { e ? e.next(h, function (a, b, d) { "normal" == a ? i("throw", c) : i(a, b, d) }) : i("throw", c) } b && b.next(h, function (a, b, c) { e ? e.next(h, function (d, e, g) { "normal" == d ? i(a, b, c) : i(d, e, g) }) : i(a, b, c) }) } else e.next(h, function (b, c, e) { "normal" == b ? i(l, d, a) : i(b, c, e) }) }) } } } }; var t = function (k) { k.modules || (k.modules = {}); k.modules.builderbase || (k.modules.builderbase = !0, k.BuilderBase = p) }, n = "function" === typeof define && !define.amd, u = "function" === typeof require && "function" === typeof define && define.amd; if ("function" === typeof require && "undefined" !== typeof module && module.exports) module.exports.init = t; else if (n) define("jscex-builderbase", function (k, g, e) { e.exports.init = t }); else if (u) define("jscex-builderbase", function () { return { init: t} }); else { if ("undefined" === typeof Jscex) throw Error('Missing the root object, please load "jscex" module first.'); t(Jscex) } })(); (function () { var p = function () { }; p.prototype = { isCancellation: !0, message: "The task has been cancelled." }; "undefined" === typeof __jscex__async__taskIdSeed && (__jscex__async__taskIdSeed = 0); var t = function (g) { return "function" === typeof g.start && "function" === typeof g.addEventListener && "function" === typeof g.removeEventListener && "function" === typeof g.complete }, n = function (g) { if (!g.modules.async) { var e = function () { }; e.prototype = { register: function (d) { this.isCancellationRequested && d(); this._handlers || (this._handlers = []); this._handlers.push(d) }, unregister: function (d) { this._handlers && (d = this._handlers.indexOf(d), 0 <= d && this._handlers.splice(d, 1)) }, cancel: function () { if (!this.isCancellationRequested) { this.isCancellationRequested = !0; var d = this._handlers; delete this._handlers; for (var a = 0; a < d.length; a++) try { d[a]() } catch (b) { g.logger.warn("[WARNING] Cancellation handler threw an error: " + b) } } }, throwIfCancellationRequested: function () { if (this.isCancellationRequested) throw new p; } }; var h = function (d) { this.id = ++__jscex__async__taskIdSeed; this._delegate = d; this._listeners = {}; this.status = "ready" }; h.prototype = { start: function () { if ("ready" != this.status) throw Error('Task can only be started in "ready" status.'); this.status = "running"; this._delegate(this); return this }, complete: function (d, a) { if ("running" != this.status) throw Error('The "complete" method can only be called in "running" status.'); var b = this._listeners; delete this._listeners; if ("success" == d) this.result = a, this.status = "succeeded", this._notify("success", b.success); else if ("failure" == d) this.error = a, this.status = a.isCancellation ? "canceled" : "faulted", this._notify("failure", b.failure); else throw Error("Unsupported type: " + d); this._notify("complete", b.complete); this.error && !b.failure && !b.complete && g.logger.warn("[WARNING] An unhandled error occurred: " + this.error) }, _notify: function (d, a) { if (a) for (var b = 0; b < a.length; b++) a[b].call(this) }, addEventListener: function (d, a) { if (!this._listeners) return this; this._listeners[d] || (this._listeners[d] = []); this._listeners[d].push(a); return this }, removeEventListener: function (d, a) { if (!this._listeners) return this; var b = this._listeners[d]; if (!b) return this; var c = b.indexOf(a); 0 <= c && b.splice(c, 1); return this } }; h.create = function (d) { return new h(d) }; h.isTask = t; var i = function () { }; i.prototype = { Start: function (d, a) { return h.create(function (b) { a.next(d, function (a, d) { if ("normal" == a || "return" == a) b.complete("success", d); else if ("throw" == a) b.complete("failure", d); else throw Error("Unsupported type: " + a); }) }) }, Bind: function (d, a) { return { next: function (b, c) { var f = function () { if (this.error) c("throw", this.error); else { var d; try { d = a.call(b, this.result) } catch (f) { c("throw", f); return } d.next(b, c) } }; "ready" == d.status ? (d.addEventListener("complete", f), d.start()) : "running" == d.status ? d.addEventListener("complete", f) : f(d) } } } }; for (var l in g.BuilderBase.prototype) i.prototype[l] = g.BuilderBase.prototype[l]; g.Async || (g.Async = {}); l = g.Async; l.CancellationToken = e; l.CanceledError = p; l.Task = h; l.AsyncBuilder = i; g.builders || (g.builders = {}); g.binders.async = "$await"; g.builders.async = new i; g.modules.async = !0 } }, u = "function" === typeof define && !define.amd, k = "function" === typeof require && "function" === typeof define && define.amd; if ("function" === typeof require && "undefined" !== typeof module && module.exports) module.exports.init = function (g) { if (!g.modules.builderbase) { if ("string" === typeof __dirname) try { require.paths.unshift(__dirname) } catch (e) { try { module.paths.unshift(__dirname) } catch (h) { } } require("jscex-builderbase").init(g) } n(g) }; else if (u) define("jscex-async", ["jscex-builderbase"], function (g, e, h) { h.exports.init = function (e) { e.modules.builderbase || g("jscex-builderbase").init(e); n(e) } }); else if (k) define("jscex-async", ["jscex-builderbase"], function (g) { return { init: function (e) { e.modules.builderbase || g.init(e); n(e) } } }); else { if ("undefined" === typeof Jscex) throw Error('Missing the root object, please load "jscex" module first.'); if (!Jscex.modules.builderbase) throw Error('Missing essential components, please initialize "builderbase" module first.'); n(Jscex) } })(); (function () { var p = function (g) { if (1 >= g.length) return null; for (var e = [], h = 1; h < g.length; h++) e.push(g[h]); return e }, t = function (g, e) { for (var h = [], i = 0; i < g.length; i++) h.push(g[i]); for (; h.length < e; ) h.push(void 0); return h }, n = function (g) { if (!g.modules["async-powerpack"]) { if (!g.modules.async) throw Error('Missing essential components, please initialize "jscex-async" module first.'); var e = g.Async, h = e.Task, i = e.CanceledError; e.sleep = function (e, d) { return h.create(function (a) { d && d.isCancellationRequested && a.complete("failure", new i); var b, c; d && (c = function () { clearTimeout(b); a.complete("failure", new i) }); b = setTimeout(function () { d && d.unregister(c); a.complete("success") }, e); d && d.register(c) }) }; e.onEvent = function (e, d, a) { return h.create(function (b) { a && a.isCancellationRequested && b.complete("failure", new i); var c = function () { e.removeEventListener ? e.removeEventListener(d, f) : e.removeListener ? e.removeListener(d, f) : e.detachEvent(d, f) }, f, g; a && (g = function () { c(); b.complete("failure", new i) }); f = function (d) { a && a.unregister(g); c(); b.complete("success", d) }; e.addEventListener ? e.addEventListener(d, f) : e.addListener ? e.addListener(d, f) : e.attachEvent(d, f); a && a.register(g) }) }; h.whenAll = function () { var e; if (1 == arguments.length) { var d = arguments[0]; e = h.isTask(d) ? [d] : d } else { e = Array(arguments.length); for (d = 0; d < arguments.length; d++) e[d] = arguments[d] } return h.create(function (a) { var b = {}, c; for (c in e) if (e.hasOwnProperty(c)) { var d = e[c]; d && (h.isTask(d) || (e[c] = d = h.whenAll(d)), b[d.id] = c) } for (var g in b) b.hasOwnProperty(g) && (d = e[b[g]], "ready" == d.status && d.start()); for (g in b) if (b.hasOwnProperty(g) && (d = e[b[g]], d.error)) { a.complete("failure", d.error); return } var i = "[object Array]" === Object.prototype.toString.call(e) ? Array(e.length) : {}, k = 0, n = function () { if (this.error) { for (var c in b) b.hasOwnProperty(c) && e[b[c]].removeEventListener("complete", n); a.complete("failure", this.error) } else i[b[this.id]] = this.result, delete b[this.id], k--, 0 == k && a.complete("success", i) }; for (g in b) b.hasOwnProperty(g) && (c = b[g], d = e[c], "succeeded" == d.status ? (i[c] = d.result, delete b[d.id]) : (k++, d.addEventListener("complete", n))); 0 == k && a.complete("success", i) }) }; h.whenAny = function () { var e = {}; if (1 == arguments.length) { var d = arguments[0]; h.isTask(d) ? e[0] = d : e = d } else for (d = 0; d < arguments.length; d++) e[d] = arguments[d]; return h.create(function (a) { var b = {}, c; for (c in e) if (e.hasOwnProperty(c)) { var d = e[c]; h.isTask(d) && (b[d.id] = c) } for (var g in b) d = e[b[g]], "ready" == d.status && d.start(); for (g in b) if (c = b[g], d = e[c], d.error || "succeeded" == d.status) { a.complete("success", { key: c, task: d }); return } var i = function () { for (var c in b) e[b[c]].removeEventListener("complete", i); a.complete("success", { key: b[this.id], task: this }) }; for (g in b) e[b[g]].addEventListener("complete", i) }) }; e.Jscexify || (e.Jscexify = {}); e = e.Jscexify; e.fromStandard = function (e) { var d = p(arguments); return function () { var a = this, b = t(arguments, e.length - 1); return h.create(function (c) { b.push(function (a, b) { if (a) c.complete("failure", a); else { if (d) { for (var e = {}, g = 0; g < d.length; g++) e[d[g]] = arguments[g + 1]; return c.complete("success", e) } c.complete("success", b) } }); e.apply(a, b) }) } }; h.prototype.then = h.prototype.continueWith = function (e) { var d = this; return h.create(function (a) { var b = function () { this.error ? a.complete("failure", this.error) : a.complete("success", this.result) }, c = function () { if (this.error) return a.complete("failure", this.error); var c; try { c = e(this.result) } catch (d) { return a.complete("failure", d) } c.status == "ready" && c.start(); c.status == "running" ? c.addEventListener("complete", b) : b.call(c) }; d.status == "ready" && d.start(); d.status == "running" ? d.addEventListener("complete", c) : c.call(d) }) }; e.fromCallback = function (e) { var d = p(arguments); return function () { var a = this, b = t(arguments, e.length - 1); return h.create(function (c) { b.push(function (a) { if (d) { for (var b = {}, e = 0; e < d.length; e++) b[d[e]] = arguments[e]; c.complete("success", b) } else c.complete("success", a) }); e.apply(a, b) }) } }; g.modules["async-powerpack"] = !0 } }, u = "function" === typeof define && !define.amd, k = "function" === typeof require && "function" === typeof define && define.amd; if ("function" === typeof require && "undefined" !== typeof module && module.exports) module.exports.init = n; else if (u) define("jscex-async-powerpack", ["jscex-async"], function (g, e, h) { h.exports.init = n }); else if (k) define("jscex-async-powerpack", ["jscex-async"], function () { return { init: n} }); else { if ("undefined" === typeof Jscex) throw Error('Missing the root object, please load "jscex" module first.'); n(Jscex) } })();